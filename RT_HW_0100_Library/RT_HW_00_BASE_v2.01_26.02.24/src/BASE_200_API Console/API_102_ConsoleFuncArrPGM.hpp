
//=================================================================================================
//							Вывод значений из массивов заданного типа [kind]
//=================================================================================================
void consoleArrPGM(uint8_t kind){
 uint8_t len;
 uint8_t  qntLine; uint8_t endLine;
//-------------------------------------------------------------------------------------------------
if(kind>RT_HW_PGM_QNT_ID){return;}								//--Выход по несуществующему типу массива; 
len=getLenPosPGM(kind);											//--Получение кол-ва доступных пинов;
if(len==0)				 {return;}								//--Выход если нет выводимых элементов;					
mess.alig='L'; consoleVar(getNameKindPin(kind),'[',4); 			//--Вывод имени массива + '[';
mess.alig='R'; consoleVar(len,']',3,'U'); consoleChar(':',' ');	//--Вывод кол-ва доступных пинов + ']';
//-------------------------------------------------------------------
uint8_t indexPin=0;	 
qntLine=24; 
#if defined(RT_HW_CORE_STM32)
if(mess.modePin=='A'){qntLine=8;} else{qntLine=16;}
#endif
//-------------------------------------------------------------------
len=getLenFullPGM(kind);										//--
 endLine=0;
for(uint8_t i=0; i<len; i++){uint8_t pin=getFromArrPGM(kind,i); if(pin!=255){
//---------------------------------------------------------------------------------
if(endLine){endLine=0; consoleBlank(9);}
    if((++indexPin>=qntLine) || ((i+1)>=len))   {consoleVar(pin,'E',mess.lenPin,'P'); indexPin=0; endLine=1;}
     else                       {consoleVar(pin,',',mess.lenPin,'P'); }}
//---------------------------------------------------------------------------------------
}
if(indexPin>0) {consoleSuff('L');}
//------------------------------------------------------------------
//mess.alig=alig; mess.modePin=modePin;
};

//=================================================================================================


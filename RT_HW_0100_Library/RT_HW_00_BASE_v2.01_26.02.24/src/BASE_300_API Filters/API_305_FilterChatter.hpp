//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//   RT_HW_FILTER_CHATTER.h - фильтр дребезга переменной
//   Возвращает новое значение(curr) если оно стабиотно в течении заданного периода (period) 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++				  
#ifndef RT_HW_FILTER_CHATTER_h
#define RT_HW_FILTER_CHATTER_h
#include "RT_HW_BASE.h"
//-------------------------------------------------------------------------------------------------
template < typename TYPE >
class RT_HW_FILTER_CHATTER
{
//-------------------------------------------------------------------------------------------------
public:
  TYPE     vr,ago;    		//--Результат очищенный от дребезга;
  uint8_t  dir=0;			//--Номер этапа работы фильтра;
  uint32_t timeBegin;		//--Начало отсчета периода дребезга;
//=================================================================================================
  TYPE filtered(TYPE curr, uint16_t period=50) 
  {(void)period;	
//-------------------------------------------------------------------------------------------------
   if(dir==0)
   {
	if(vr==curr){return vr;} 				//--Выход если значение стабильно;	
	ago=curr; timeBegin=RT_HW_MILLIS; dir=1;	//--Установка условия процедуры контроля дребезга; 						 	           
   }
//-------------------------------------------------------------------------------------------------
   if(dir==1)
   {												  	//--Проверка  условия процедуры контроля дребезга;
    if(RT_HW_Base.getPastMs(timeBegin)<period){if(ago!=curr){dir=0;}}	//--Если значение изменилось в течение периода,    переход на начало без изменения	значения;
    else                                      {   vr =curr;  dir=0;}	//	Если значение стабильно по завершению периода, переход на начало c   изменением	значения;
    return vr;
   }				       
//-------------------------------------------------------------------------------------------------
  return vr;};
//-------------------------------------------------------------------------------------------------
};
#endif


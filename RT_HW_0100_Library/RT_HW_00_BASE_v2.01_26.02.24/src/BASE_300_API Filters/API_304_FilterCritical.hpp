//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//   RT_HW_FILTER_CRITICAL.h - фильтр резких отклонений
//   1.Возвращает ok=1 при резком отклонении входного значения от предудущего. 
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++				  
#ifndef RT_HW_FILTER_CRITICAL_h
#define RT_HW_FILTER_CRITICAL_h
#include "RT_HW_BASE.h"
//-------------------------------------------------------------------------------------------------
template < typename TYPE >
class RT_HW_FILTER_CRITICAL{
public:
TYPE    in,ago,vr;  	//--Входное значение, предыдущее значение, возврашаемое значение;
uint8_t first=0;
uint8_t deviation=0;	//--Допустимое отклонение в %;
uint8_t curr=0;         //--Расчетное текущее отклонение в %;
uint8_t ok=0;	    	//--Флаг выхода за границу;
//-------------------------------------------------------------------------------------------------
TYPE filtered(TYPE val) {																	
//-------------------------------------------------------------------------------------------------
in=val; ago=vr;	ok=0;                                       					//--Сохранение предущего отфильтрованного значения;
//-------------------------------------------------------------------------------------------------
if(deviation>0){
	if(in > vr){curr=(in-vr)*deviation/100; if(curr>deviation){ok=1;}}
	if(in < vr){curr=(vr-in)*deviation/100; if(curr>deviation){ok=1;}}                               
if(first==0){first=1; ok=0;}
}
vr=in; 
//-------------------------------------------------------------------------------------------------
return vr;}                                    							//--Выход;
//-------------------------------------------------------------------------------------------------
void    reset() {first=0;}								//==Функция подготавки к сбросу функцию filtered();
};
#endif


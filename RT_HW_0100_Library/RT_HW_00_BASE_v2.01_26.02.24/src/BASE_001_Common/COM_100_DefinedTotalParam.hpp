//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						1.МАКРОСЫ ДЛЯ RT_HW_BASE
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//-------------------------------------------------------------------------------------------------
//						1.1. Макросы для совместимости функций micros(),millis()
//-------------------------------------------------------------------------------------------------
#define RT_HW_MICROS				micros()				//--Макрос измерения времени в mcs;
#define RT_HW_MILLIS				millis()				//--Макрос измерения времени в ms;

//-------------------------------------------------------------------------------------------------
//						1.2. Макросы чтения из массивов PROGMEM
//-------------------------------------------------------------------------------------------------
#define RT_HW_READ_BYTE_PGM(arr,n) 	pgm_read_byte(&arr[n])	//--Чтение из массива arr n байта;

//-------------------------------------------------------------------------------------------------
//						1.3. Макросы программной задержки (для быстрых процессов)
//-------------------------------------------------------------------------------------------------
#define RT_HW_DELAY(x) if(x>0){do{for(int i=0;i<x;i++) {asm volatile("nop");}}while(0);}  //--Задержка в у.е.

//-------------------------------------------------------------------------------------------------
//						1.4. Макросы min, max (рекомендуется к применению)	
// Примечание: не применяйте макросы Arduino max() / min() поскольку они могут конфликтовать c C++(для некоторых версий)
//             can't define max() / min() because of conflicts with C++
//-------------------------------------------------------------------------------------------------
#define RT_HW_MIN(a,b)     ((a)<(b)?(a):(b))  
#define RT_HW_MAX(a,b)     ((a)>(b)?(a):(b))
#define RT_HW_MIDLE(a,b,c) ((a < b) ? ((b < c) ? b : ((c < a) ? a : c)) : ((a < c) ? a : ((c < b) ? b : c)))

//-------------------------------------------------------------------------------------------------
//						1.5.Макросы ускоренных битовых операций
// коды для битов 0-7: ->1,2,4,6,8,16,32,64,128
//-------------------------------------------------------------------------------------------------
#define RT_HW_BIT_SET(state,code)               (state) |= (code)			//--Установка битов;
#define RT_HW_BIT_CLEAR(state,code)             (state) &=~(code)			//--Очистка битов;			
#define RT_HW_BIT_BLINK(state,code)             (state) ^= (code)			//--Инверсия битов;
#define RT_HW_BIT_READ(state,code)        (bool((state) &  (code)))			//--Чтение бита;
#define RT_HW_BIT_WRITE(state,code,val) if(val){(state) |= (code);} else {(state) &=~(code);} 	//--Запись битов;
//-------------------------------------------------------------------------------------------------
#define  RT_HW_BIT_QUICK_NUM_0 	1
#define  RT_HW_BIT_QUICK_NUM_1 	2
#define  RT_HW_BIT_QUICK_NUM_2 	4
#define  RT_HW_BIT_QUICK_NUM_3 	8
#define  RT_HW_BIT_QUICK_NUM_4 	16
#define  RT_HW_BIT_QUICK_NUM_5 	32
#define  RT_HW_BIT_QUICK_NUM_6 	64
#define  RT_HW_BIT_QUICK_NUM_7 	128

//-------------------------------------------------------------------------------------------------
//						1.6. Макросы для работы со строками
//-------------------------------------------------------------------------------------------------
#define RT_HW_BREAK_CHAR			'~'						//--Блокирующий символ для работы со строками;
#define RT_HW_BLANK_CHAR			' '						//--Cимвол для заполнения свободного поля в строках;

//-------------------------------------------------------------------------------------------------
//						1.2. Макросы разные
//-------------------------------------------------------------------------------------------------
//#define RT_HW_DEFAULT_T_NAN -1
//#define RT_HW_DEFAULT_H_NAN  1
//-------------------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------------------



//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						2.ПАРАМЕТРЫ ДЛЯ РАБОТЫ С ПИНАМИ
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define RT_HW_PIN_MODE_XXX      0 		//--Резерв (не используется);
#define RT_HW_PIN_MODE_DIN      1 		//--Дискретный ввод;
#define RT_HW_PIN_MODE_ADC      2 		//--Аналоговый ввод;
#define RT_HW_PIN_MODE_TCH      3		//--Сенсорный  ввод;
#define RT_HW_PIN_MODE_DOT     	4		//--Дискретный вывод;
#define RT_HW_PIN_MODE_PWM     	5		//--Широтно-импульсный вывод;
#define RT_HW_PIN_MODE_DAC      6		//--Аналоговый вывод;
#define RT_HW_PIN_MODE_SRV      7		//--Серво      вывод;
#define RT_HW_PIN_MODE_FRQ      8		//--Частотный  вывод;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						3.ПАРАМЕТРЫ ДЛЯ РАБОТЫ С КОММУНИКАЦИЯМИ
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define RT_HW_LINK_MODE_XXX     0 		//--Резерв (не используется);
#define RT_HW_LINK_MODE_I2C0    1 		//--i2c0;
#define RT_HW_LINK_MODE_I2C1    2 		//--i2c1;
#define RT_HW_LINK_MODE_SPI0    3 		//--SPI0;
#define RT_HW_LINK_MODE_SPI1    4 		//--SPI1;
#define RT_HW_LINK_MODE_ETH1    5 		//--ETH1;
#define RT_HW_LINK_MODE_ETH2    6 		//--ETH2;
#define RT_HW_LINK_MODE_WFI     7 		//--WiFi;
#define RT_HW_LINK_MODE_BTH     8 		//--Bluetooth;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						 2.Коды типов беспроводного интерфейса
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//#define RT_HW_INTERFACE_ANON	 	0
//#define RT_HW_INTERFACE_ETHERNET 	1
//#define RT_HW_INTERFACE_WIFI     	2
//#define RT_HW_INTERFACE_BLUETOOTH   3	//---Встроенный BlueTooth;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						2.ПАРАМЕТРЫ ДЛЯ РАБОТЫ С UART
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
/*
//=================================================================================================
//						1.1.UART: коды типы
//=================================================================================================
#define RT_HW_TYPE_UART_USB   	0		//--USB;
#define RT_HW_TYPE_UART_UART  	1		//--UART
#define RT_HW_TYPE_UART_USART  	2		//--USART;
//=================================================================================================
//						1.2.UART: коды скоростей
//=================================================================================================
#define RT_HW_SPEED_300         0
#define RT_HW_SPEED_600         1
#define RT_HW_SPEED_1200        2
#define RT_HW_SPEED_2400        3
#define RT_HW_SPEED_4800        4
#define RT_HW_SPEED_9600        5
#define RT_HW_SPEED_14400       6
#define RT_HW_SPEED_19200       7
#define RT_HW_SPEED_28800       8
#define RT_HW_SPEED_38400       9
#define RT_HW_SPEED_57600      10
#define RT_HW_SPEED_115200     11
//=================================================================================================
//						 1.3.UART: коды стоповых битов(1,2), четности посылки, длиг.
//=================================================================================================
#define RT_HW_PORT_STOP_BITS_1   1		//--Один стоповый бит;
#define RT_HW_PORT_STOP_BITS_2   2		//--Два стоповых бита;
//-------------------------------------------------------------------------------------------------
#define RT_HW_PORT_DATA_BITS_5 	 5		//--Длина данных 5 битов;
#define RT_HW_PORT_DATA_BITS_6   6		//--Длина данных 6 битов;
#define RT_HW_PORT_DATA_BITS_7   7		//--Длина данных 7 битов;
#define RT_HW_PORT_DATA_BITS_8   8		//--Длина данных 8 битов;
//-------------------------------------------------------------------------------------------------
#define RT_HW_PORT_PARITY_NONE   0		//--Без контроля четности/нечетности;
#define RT_HW_PORT_PARITY_EVEN   1		//--Контроль четности;
#define RT_HW_PORT_PARITY_ODD    2		//--Контроль нечетности;


*/


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						6.Макросы для управления servo
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define RT_HW_SERVO_PULSE_WIDTH_MIN           544	//--Минимальная ширина импульсаthe shortest pulse sent to a servo; 
#define RT_HW_SERVO_PULSE_WIDTH_MAX          2400 	// the longest pulse sent to a servo
#define RT_HW_SERVO_PULSE_WIDTH_DEFAULT      1500 	// default pulse width when servo is attached
#define RT_HW_SERVO_REFRESH_INTERVAL        20000 	// minumim time to refresh servos in microseconds 

/*
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						7.Макросы для поиска на шине i2c
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++;
#define RT_HW_I2C_FIND_QNT    		 3   	//--Кол-во повторений при поиске адреса;
#define RT_HW_I2C_FIND_PERIOD_CUR   20   	//--Штатный период(ms) при нормальном поиске адреса;
#define RT_HW_I2C_FIND_PERIOD_MAX 2000    	//--Кол-во повторений при поиске адреса;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						8.Макросы для SPI
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define RT_HW_SPI_MSBFIRST 1
#define RT_HW_SPI_LSBFIRST 0
#define RT_HW_SPI_MODE0    0
#define RT_HW_SPI_MODE1    1
#define RT_HW_SPI_MODE2    2
#define RT_HW_SPI_MODE3    3
*/
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						9.Макросы для работы с UNIX-временем
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define RT_HW_UNIX_CORRECTION_1900 2208988800UL; //--Разница в сек между датами 01.01.1990 и 01.01.1970; 

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						20.Резерв
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#define RT_HW_DEVICE_DELAY 50
                             
//=================================================================================================







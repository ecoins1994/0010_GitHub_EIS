//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
//                                  1. Объекты и параметры,функции 
//
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//-------------------------------------------------------------------------------------------------
//                                  1.1. Системные параметры
//-------------------------------------------------------------------------------------------------
uint16_t vspeedMCUF0;//--Быстродействие/1000 CORE0;
//-------------------------------------------------------------------------------------------------
//                                  1.2. Пины Контроль,Led,Кнопка,ADC,PWM
//------------------------------------------------------------------------------------------------- 
  uint8_t pinControl=255; RT_HW_PIN_DIR_ID   idPinControl;  //--Пин контроль loop()[для логического анализатора];
  uint8_t pinLed=255;     RT_HW_PIN_DIR_ID   idPinLed;      //--Пин Led на плате;                    
  uint8_t pinButton=255;  uint8_t  vButtonF;                //--Пин Кнопка, значение с кнопки после фильтра;
  uint8_t pinADC=255;     uint16_t vADCF;                   //--Пин ADC, значение после фильтра;                                   
  uint8_t pinPWM=255;     uint16_t vPWM;                    //--Пин PWM, значение для вывода на PWM;
//-------------------------------------------------------------------------------------------------
//                                  1.3. Пины устройств, параметры
//------------------------------------------------------------------------------------------------- 
  uint8_t pinDS1820=255;    uint8_t  vDS1820_ok=0; float   vDS1820_Temp=0.0;  //--Сенсор DS1820;
  uint8_t pinSR04=255;      uint8_t  vSR04_ok=0;   uint16_t vSR04_Len=0;      //--Сенсор HC-SR04; 
//-------------------------------------------------------------------------------------------------
//                                  1.4. CS устройств, параметры
//-------------------------------------------------------------------------------------------------
  uint8_t cs74HC595=255;    uint8_t  v74HC595;                                //--cs 74HC595, записываемое значение;  
//-------------------------------------------------------------------------------------------------
//                                  1.5. Адреса устройств на шине i2c, параметры
//-------------------------------------------------------------------------------------------------
  uint8_t i2cAdrLcd1=0x27;                                                    //--i2c.Lcd1 16x2;
  uint8_t i2cAdrAHTxx=0x38;   uint8_t vAHTxx_ok; float vAHTxx_Temp, vAHTxx_Hum; //--i2c.Сенсор AHTxx;
  uint8_t i2cAdrMCP4725=0x60; uint8_t  vMCP4725_ok; uint16_t vMCP4725_vr;     //--i2c.Расширитель DAC;

//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//                                   2.ФУНКЦИЯ ИНИЦИАЛИЗАЦИИ
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
void fncInitParam(){
  if(RT_HW_Base.isInit==1){return;}
     RT_HW_Base.isInit=1;
     pinControl  =RT_HW_Base.vPinControl(); //--Установка пина Control;
     pinLed      =RT_HW_Base.vPinLed();     //--Установка пина Led;
     pinButton   =RT_HW_Base.vPinButton();  //--Установка пина Кнопки;
     pinADC      =RT_HW_Base.vPinADC();     //--Установка пина ADC;   
     pinPWM      =RT_HW_Base.vPinPWM();     //--Установка пина PWM;
     pinDS1820   =RT_HW_Base.vPinOneWire(); //--Установка пина DS1820;   
     pinSR04     =RT_HW_Base.vPinSR04();    //--Установка пина HC-SR04;      
     cs74HC595   =RT_HW_Base.vSpiCS0();     //--Установка пина cs 74HC595;
   //RT_HW_Base.i2cSetPins(28,29,0);        //--Установка пинов i2c(pinSDA,pinSCL,bus) пользователем;
}
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//                                   10.ФУНКЦИИ РАБОТЫ С ПИНАМИ
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//=================================================================================================
//                                 10.1.Чтение кнопки с защитой от дребезга 50 ms
//=================================================================================================
#ifdef RT_HW_TEST_PERMIT_BUTTON
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  RT_HW_PIN_DIR_ID   idPinButton;                 uint8_t  vButton;    //--ID пина кнопки, значение с кнопки;
  RT_HW_FILTER_CHATTER<uint8_t>    filterButton;                       //--Фильтр дребезга кнопки;
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
void fncButton(){
     vButton=!RT_HW_Base.pinDigitalRead(idPinButton, pinButton, 'U'); //--Чтение кнопки с подтяжкой пина к Vcc;
     vButtonF=filterButton.filtered(vButton,50);      //--Фильтр защиты от дребезга 50ms;
};
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#else
void fncButton(){;};
#endif
//=================================================================================================
//                                  10.2.Чтение ADC
//=================================================================================================
#ifdef RT_HW_TEST_PERMIT_ADC
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  RT_HW_PIN_ADC_ID   idPinADC;                         uint16_t vADC;   //--Пин ADC, значение с пина;  
  RT_HW_FILTER_RING_AVERAGE<uint16_t,10> filterADC;                     //--Фильтр ADC(median 5-го порядка), значение после фильтра;
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
void fncADC(){
      RT_HW_Base.pinAnalogRead(idPinADC,pinADC);             //--Чтение с пина ADC;
      vADCF=filterADC.filtered(idPinADC.vNorm);       //--Фильтр медианный средний ADC;
};
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#else
void fncADC(){;};
#endif  
//=================================================================================================
//                                  10.3.Запись PWM
//=================================================================================================
#ifdef RT_HW_TEST_PERMIT_PWM
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  RT_HW_PIN_PWM_ID   idPinPWM;                          uint16_t vPWMcur;       //--Пин PWM, значение для вывода на PWM;
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
void fncPWM(){
  if(idPinPWM.dir==0){idPinPWM.freq=1000; idPinPWM.depth=16;} //   freq=1000Hz, depth bit=16;
  RT_HW_Base.pinPWM(idPinPWM,pinPWM,vPWM);       //--Запись на пин нормализованного значения;
  vPWMcur=idPinPWM.var;                  //--Сохранение значения выводимого на пин;
}
//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#else
void fncPWM(){;};
#endif
//=================================================================================================

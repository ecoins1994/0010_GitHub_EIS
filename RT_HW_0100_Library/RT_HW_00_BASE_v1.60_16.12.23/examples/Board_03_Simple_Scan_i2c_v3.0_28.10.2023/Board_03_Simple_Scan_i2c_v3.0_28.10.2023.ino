//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//                                  BASIC TEST №03 ver.3.0 14.10.2023  
//                                           СКАНИРОВАНИЕ ШИНЫ i2c
//                  (совместим с визуальной системой программирования FLProg)
//    1.1.Инициализируется консоль (в терминах Arduino IDE - монитор порта). 
//    1.2.После готовности консоли (проверка консоли особо критична для контроллеров с USB на кристалле - STM32,Raspberry Pi,ESP32-C3,S2,S3),
//        в монитор порта однократно выводяся отчет о проекте (пины, наличие коммуникаций и др.),
//        сканируется шина i2c (SDA,SCL необходимо подтянуть к Vcc резисторами 10-47к).
//    3.1.В каждом цикле loop() меняется значение на пине Control (для логического анализатора).
//    3.2.На пин Led выводится меандр 500ms.
//    4.  Каждую секунду сканируется шина i2c (можно сканировать несколько шин).
//-------------------------------------------------------------------------------------------------
//    Перечень поддерживаемых плат размещен во вкладке Readme.hpp.
//    Там же размещены инструкции по настройке Arduino IDE, 
//    для ESP32 дополнительная инструкция для достижения большего удобства.
//-------------------------------------------------------------------------------------------------
// ecoins@mail.ru 14.10.23
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//=================================================================================================
//                                 Подключение библиотек
//=================================================================================================
  #include "RT_HW_BASE.h"   //--Базовая библиотека;
//=================================================================================================
//                               Подключение внутренних вкладок
//=================================================================================================
  #include "Bconsole.hpp"               //--Функции вывода на консоль;
//=================================================================================================
//                                Параметры для работы с диспетчером задач
//=================================================================================================
RT_HW_PIN_DIR_ID   idPinControl;    uint8_t pinControl; //--Пин контроль;
RT_HW_PIN_DIR_ID   idPinLed;        uint8_t pinLed;     //--Пин Led on Board;
RT_HW_GENERATOR_EVENT_ID idGenScan;                     //--Генератор для scan i2c;
uint8_t vInit=0;                                        //--Флаг настройки параметров;
RT_HW_STRUCT_SHED shed;                                 //--Диспетчер;
//=================================================================================================
//                                    Секция SETUP()
//=================================================================================================
void setup(){}
//=================================================================================================
//                                    Секция LOOP()
//=================================================================================================
void loop(){
//================================================================================================= 
//                                    1.1.Инициализация параметров
//=================================================================================================
if(vInit==0){vInit=1;
pinControl=RT_HW_Base.device.pin.control; 
pinLed    =RT_HW_Base.device.pin.led; 
//-------------------------------------------------------------------------------------------------
//RT_HW_Base.i2cSetPins(28,29,0);}   //--pinSDA,pinSCL,bus- Здесь можно перенастроить номера пинов для контроллеров, в которых это возможно.
//RT_HW_Base.i2cSetPins(28,29,1);}   //--pinSDA,pinSCL,bus- Здесь можно перенастроить номера пинов для контроллеров, в которых это возможно.
//-------------------------------------------------------------------------------------------------
}
//================================================================================================= 
//                                    1.2.Выполнение диспетчера
//=================================================================================================
RT_HW_Base.sheduler(shed);                      //--Диспетчер задач(CORE0);
//================================================================================================= 
//                                    1.3.Управление консолью
//=================================================================================================
RT_HW_Base.consoleBegin();                      //--Инициализация консоли;
if(RT_HW_Base.consoleHead()){consoleHead();}    //--Однократный вывод отчета по MCU;
//=================================================================================================
//                                    1.4.Работа системными пинами
//=================================================================================================
RT_HW_Base.pinDigitalWrite(idPinControl,pinControl,shed.control);   //--Ввывод цикла loop() на контрольный пин; 
RT_HW_Base.pinDigitalWrite(idPinLed,    pinLed,    shed.blink500);  //--Вывод меандра 500 ms на светодиод; 
//===================================3.Scan i2c====================================================
if(shed.quick.num==1){
  if(RT_HW_Base.generatorEvent(idGenScan,1000)){
  RT_HW_Base.i2cScanBus(0);
  //RT_HW_Base.i2cScanBus(1);
  }
}
}; //++++END loop()================================================================================
   

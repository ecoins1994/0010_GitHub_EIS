//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//    						Секция Program.s v01_07.01.2024
//							1.Глобальные переменные проекта.
//							2.Стартовый код программы.
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//=================================================================================================
//                       1.1.СИСТЕМНЫЕ ПЕРЕМЕННЫЕ: основные.
//=================================================================================================
// dp	- код текущей страницы;
// dim  - уровень подсветки (0-100);
// thc  - цвет кисти для рисования. Допустимые значения BALACK,BLUE,BROWN,GREEN,YELLOW,RED,GRAY,WHITE, числовое значение RGB565;
// bkcmd- управление возвращаемыми данными (0,1,2,3);
// sleep- переход в режим сна(=1);
// wup  - страница после выхода из режима сна;
// ussp - интервал в секундах по истечении которого, при отсутствии данных из UART, произойдет переход в режим сна (0-отключено,3-65535сек);
// thsp - интервал в секундах по истечении которого, при отсутствии касания экрана  произойдет переход в режим сна (0-отключено,3-65535сек);
// thup - выход из режима сна при отсутствии касания: =0-не выходить из сна при касании; =1-выход из сна при касании;
//=================================================================================================
//                       1.2.СИСТЕМНЫЕ ПЕРЕМЕННЫЕ: для дисплеев с сенсорным экраном.
//=================================================================================================
// thc2,tch3 - последние координаты (x,y) точки касания. Доступны только для чтения;
//=================================================================================================
//                       1.3.СИСТЕМНЫЕ ПЕРЕМЕННЫЕ: для дисплеев с часами реального времени (K,P)
//=================================================================================================
// rtc0,rtc1,rtc2	- год,месяц,число;
// rtc3,rtc4,rtc5   - час,минута,секунда;
// rtc6 			- день недели;
//==================================================================================================
//                       1.4.ПОЛЬЗОВАТЕЛЬСКИЕ ПЕРЕМЕННЫЕ: управление на экранах Nextion
//==================================================================================================
//  nBlink,
//  nBlinkCnt
//  nBlinkNum
//  nPageCnt
//  nPageNum
//  nPageNumAgo
//  nReadySystem - Флаг готовности для отправки системных значений из Nextion в MCU;
//=================================================================================================
int colorON=2016, colorOFF=33840	//--Параметры для включения/выключения фона (.bco)
//-------------------------------------------------------------------------------------------------
//                       1.4.1.Управление анимацией мерцания
//-------------------------------------------------------------------------------------------------
int nBlinkNum=0
int nBlinkCnt=100
///------------------------------------------------------------------------------------------------
//                       1.4.2.Контроль смены страницы
//-------------------------------------------------------------------------------------------------
int nPageNum=0
int nPageCnt=10
///------------------------------------------------------------------------------------------------
//                       1.4.3.Дата и время внутренних часов
//-------------------------------------------------------------------------------------------------
int nReadySystem
int nHour, nMin, nSec 				//--Время со внутренних часов;
int nWeek, nDay, nMonth, nYear, nYear2	//--Дата с внутренних часов;

//int vBlink,cntBlink,numBlink  //--Переменные для мерцания(анимации) выбранным изображением на каждой страницы;
//int cntPage=0, agoPage,curPage, vPage             //--Номера  предыдущей текущей страницы;
int vSec,vMin,vHour,vDay,vMonth,vYear,vWeek //--Текущее время - секунды,минуты,час,месяц,год,день недели.
int agoSec,changeTime        //--Буфер для контроля изменения времени (по rtc5(секунды) или rtc4(мин);
//int vReadySystem                //--Флаг готовности для отправки системных значений из Nextion в MCU;
int userSys0,userSys1         //--Зарезервированные пользовательские переменные;

int buf,buf1,buf2,buf3              //--Рабочие буфера;
int idx,idx1,idx2,idx3               //--Рабочие индексы;
//==================================================================================================
//                       4.MODBUS ПЕРЕМЕННЫЕ: для формирования транзакций из Nextion в контроллер
//                         (протокол отправки -  в основе ModBus)
//==================================================================================================
int head    //--Заголовок посылки
int func   	//--Функция: 6-отправка регистра,16 отправка нескольких регистров,46 - отправка системных параметров; 56-отправка времени;
int adr     //--Буфер для адреса регистра отправляемой посылки (0xFFFF);
int qntReg  //--Кол-во отправляемых регистров(0xFF)
int qntByte //--Кол-во отправляемых байт(0xFF)
int crc      //--Контрольная сумма отправляемой посылки (0xFF);
//---------------------------------------------------------------------------------------------------
int cmdPack,cntPack    //--Команда управления отправки посылки;
//=================================================================================================
//                       1.4.СИСТЕМНЫЕ ПЕРЕМЕННЫЕ: рабочие
//  sys0,sys1,sys2	- переменные для использования  в проекте.
//=================================================================================================
int sys0,sys1,sys2 	//--Системные переменные Nextion (для использовании в скрипта);  
int mID 	//--Идентификатор  MCU полученный им от генератора случайных чисел;  
int mBoard	//--Хар-ки         MCU: byte->3=резерв,      2=резерв,1=код Arch,0=код платы;
int mSYS	//--Системн. флаги MCU: bit->0=резерв, 1=LED на плате(обычно 500ms), bit=2-Кнопка на плате;
int mMotor  //--Время работы   MCU в секундах(мотосекунды); 
int mTime	//--Время текущее  MCU: byte->3=резерв,      2=часы,  1=минуты,  0=секунды;
int mDate	//--Дата текущая   MCU: byte->3=день недели, 2=день,  1=месяц,   0=год(две младших цифры);
int mUNIX	//--Время UNIX с учетом часового пояса;
int mSP0	//--Быстродействие MCU в циклах loop()/сек первого(CORE0) и второго (CORE1) ядра;
int mSP1	//--Быстродействие MCU в циклах loop()/сек первого(CORE0) и второго (CORE1) ядра;
int mIP		//--IP             MCU: byte->3=IP[0],       2=IP[1], 1=IP[2],	 0=IP[3];
int mMAC1	//--MAC адрес High MCU: byte->3=резерв,      2=MAC[5],1=MAC[4],	 0=MAC[3];
int mMAC2	//--MAC адрес Low  MCU: byte->3=резерв,      2=MAC[2],1=MAC[1],	 0=MAC[0];
//=================================================================================================
//                       1.5.ТЕСТОВЫЕ ПЕРЕМЕННЫЕ MCU->NEXTION
//=================================================================================================
int mADC	//--Тестовое значение ADC (обычно канал 0 встроенного ADC);  
int mPWM	//--Тестовое значение PWM; 
int mSERVO	//--Тестовое значение SERVO;  
int mDAC	//--Тестовое значение DAC(0-4095);
int mRUN	//--Бегущая единица;
//=================================================================================================
//                       1.6.ДИСКРЕТНЫЕ ВХОДЫ-ВЫХОДЫ MCU->NEXTION
//=================================================================================================
int mDIN	//--Тестовое значение со слайдера 1
int mDOT	//--Тестовое значение со слайдера 2
int devOk	//--Флаги готовности устройств;
//=================================================================================================
//                       1.7.АНАЛОГОВЫЕ ВХОДЫ MCU->NEXTION
//=================================================================================================
int ADS1115f0, ADS1115f1, ADS1115f2, ADS1115f3 	//-bit.30 devOk; ADC типа ADS1115
int ADS1256f0, ADS1256f1, ADS1256f2, ADS1256f3 	//-bit.31 devOk; ADC типа ADS1256
int ADS1256f4, ADS1256f5, ADS1256f6, ADS1256f7 	//		         ADC типа ADS1256
//==================================================================================================
//                       5.ПЕРЕМЕННЫЕ ВНЕШНИХ СЕНСОРОВ И УСТРОЙСТВ 
//==================================================================================================
int AHTxt,  AHTxh				//--Сенсор AHTx   ->ok=devOk.0, T,H;
int SHT3xt, SHT3xh				//--Сенсор SHT3x  ->ok=devOk.1, T,H;
int BMP180t,BMP180p				//--Сенсор SHT3x  ->ok=devOk.2, T,P;
int BMP280t,BMP280p				//--Сенсор BMP180 ->ok=devOk.3, T,P;
int BME280t,BME280h,BME280p		//--Сенсор BME280 ->ok=devOk.4, T,H,P;
int CMTHPt, CMTHPh, CMTHPp		//--Сенсор CMTHT  ->ok=devOk.5, T,H,P. Состоит из : AHTx:t,h, BMP280:p;
int DHT22t, DHT22h				//--Сенсор AHTx   ->ok=devOk.6, T,H;
int BH1750lx					//--Сенсор BH1750 ->ok=devOk.7, Lux (освещенность);
int DS1820t						//--Сенсор DS1820 ->ok=devOk.8, T (температура);
int SR04Len						//--Сенсор HC-SR04->ok=devOk.9, Len (ультразвуковой дальномер, см);
int MAX6675t				    //--Сенсор HC-SR04->ok=devOk.10,T (температура);

//==================================================================================================
int d74HC595					//--bit.16 devOk; byte.0 chip0; byte.1 chip1; byte.2 chip2; byte.3 chip3;
int d74HC165					//--bit.17 devOk; byte.0 chip0; byte.1 chip1; byte.2 chip2; byte.3 chip3;
int MCP23017   					//--bit.20 devOk; byte.0 inA;   byte.1 inB;   byte.2 outA;  byte.3 outB; 
int PCF8575   					//--bit.21 devOk; byte.0 inA;   byte.1 inB;   byte.2 outA;  byte.3 outB;
int MCP4725a					//--bit.22 devOk; Значение записываемое на DAC1
int MCP4725b					//--bit.23 devOk; Значение записываемое на DAC2
//=================================================================================================
//                       1.7.ТЕСТОВЫЕ ПЕРЕМЕННЫЕ NEXTION->MCU
//=================================================================================================
int mSLD1	//--Тестовое значение со слайдера 1
int mSLD2	//--Тестовое значение со слайдера 2
int mSWITCH	//--Тестовое значение с кнопок, переключателей
//=================================================================================================
//                       6.ВХОДНЫЕ ПОЛЬЗОВАТЕЛЬСКИЕ ПЕРЕМЕННЫЕ
//      (для записи параметров из MCU в Nextion командами inx=123456789 или inx=0xFFFFFFFF)
// ПРИМЕЧАНИЕ: кол-во параметров и их имена могут быть измененены пользователем под конкретный проект.
//=================================================================================================
int in0,   in1,   in2,   in3,   in4,   in5,   in6,   in7,   in8,   in9
int in10,  in11,  in12,  in13,  in14,  in15,  in16,  in17,  in18,  in19
int in20,  in21,  in22,  in23,  in24,  in25,  in26,  in27,  in28,  in29
int in30,  in31,  in32,  in33,  in34,  in35,  in36,  in37,  in38,  in39
int in40,  in41,  in42,  in43,  in44,  in45,  in46,  in47,  in48,  in49
int in50,  in51,  in52,  in53,  in54,  in55,  in56,  in57,  in58,  in59
int in60,  in61,  in62,  in63,  in64,  in65,  in66,  in67,  in68,  in69
int in70,  in71,  in72,  in73,  in74,  in75,  in76,  in77,  in78,  in79
int in80,  in81,  in82,  in83,  in84,  in85,  in86,  in87,  in88,  in89
int in90,  in91,  in92,  in93,  in94,  in95,  in96,  in97,  in98,  in99
int in100, in101, in102, in103, in104, in105, in106, in107, in108, in109
int in110, in111, in112, in113, in114, in115, in116, in117, in118, in119
int in120, in121, in122, in123, in124, in125, in126, in127, in128, in129
//=================================================================================================

//=================================================================================================
//             			7.ПОЛЬЗОВАТЕЛЬСКИЕ ПАРАМЕТРЫ ДЛЯ ВЫВОДА (по страницам)
//ПРИМЕЧАНИЕ: кол-во параметров и их имена могут быть измененены пользователем под конкретный проект.
//=================================================================================================
//-----------------------------------------------------------------------------
//             10.0.ПОЛЬЗОВАТЕЛЬСКИЕ ПАРАМЕТРЫ ДЛЯ СТРАНИЦЫ 0
//-----------------------------------------------------------------------------
int  out00, out01, out02, out03 ,out04, out05, out06, out07, out08, out09
int  ago00, ago01, ago02, ago03, ago04, ago05, ago06, ago07, ago08, ago09
//-----------------------------------------------------------------------------
//             10.1.ПОЛЬЗОВАТЕЛЬСКИЕ ПАРАМЕТРЫ ДЛЯ СТРАНИЦЫ 0
//-----------------------------------------------------------------------------
int  out10, out11, out12, out13, out14, out15, out16, out17, out18, out19
int  ago10, ago11, ago12, ago13, ago14, ago15, ago16, ago17, ago18, ago19
//-----------------------------------------------------------------------------
//             10.2.ПОЛЬЗОВАТЕЛЬСКИЕ ПАРАМЕТРЫ ДЛЯ СТРАНИЦЫ 2
//-----------------------------------------------------------------------------
int  out20, out21, out22, out23, out24, out25, out26, out27, out28, out29
int  ago20, ago21, ago22, ago23, ago24, ago25, ago26, ago27, ago28, ago29
//-----------------------------------------------------------------------------
//             10.3.ПОЛЬЗОВАТЕЛЬСКИЕ ПАРАМЕТРЫ ДЛЯ СТРАНИЦЫ 3
//-----------------------------------------------------------------------------
int  out30, out31, out32, out33, out34, out35, out36, out37, out38, out39
int  ago30, ago31, ago32, ago33, ago34, ago35, ago36, ago37, ago38, ago39

//=================================================================================================

//-------------------------------------------------------------------------------------------------
int idGrafic,chanelGrafic       //--id и канал(0-3) графика;
int cmdByte,cmdLong             //--Рабочие команды для работы с графиками;
int dataByte,dataLong,dataRun   //--Рабочие параметры для работы с графиками;
int cmndGrafic,limGrafic,valGrafic //--Рабочие параметры для построения графиков;

//=================================================================================================
//                 		4.ИНСТРУКЦИИ ДЛЯ РАБОТЫ С ГРАФИКАМИ
// 1.Управление байтами через переменную grB(xxB):
//    grB=0xYYZZ, ZZ-данные, YY-команда(=70-заполнение массива, =71-сдвиг массива);
//    Примеры: №1 grB=0x703F; №2 grB=0x7177;
// 2. Управление 4-байтными переменными=grL через переменную grR
//       grR(=70-заполнение массива, =71-сдвиг массива, =90-заполнение треугольником);
//    Примеры: №1 grL=0x703F; grR=0x70
//             №2 grL=0x716D; grR=0x71
//             №3 grR=0x90;
//=================================================================================================
//                      5.ИСХОДНЫЕ ДАННЫЕ ДЛЯ ИНДИВИДУАЛЬНОГО ГРАФИКА gr
//=================================================================================================
int  grSize=512   //--Количество точек в графике. Рекомендуется выбирать кратным 64 (128,192,256,320,384,448,512 и т.д.);
int  grB=0,grL=0,grR=0,grEnd //--Параметры управления(grB,grL,grR), вспомогательный параметр GrEnd
int  gr0,gr1,gr2,gr3,gr4,gr5,gr6,gr7,gr8,gr9,gr10,gr11,gr12,gr13,gr14,gr15
//=============================================================================
//==================================================================================================
//                       20.Инициализация переменных
//==================================================================================================
mID=0xD2A4374C
mSP0=120038
mSP1=217231
mIP=0xC0A8002A
mMAC1=0x0078ACC0
mMAC2=0x002C3E40
mBoard=0x00000411
mDate=0x04050118
mTime=0x0010141E
//--------------------------------------------------------------------------------------------------
colorON=WHITE			//--Код для bc0 "Включено"
colorOFF=GRAY			//--Код для bc0 "Выключено"
//==================================================================================================
//                       20.ОБЩИЙ КОД ПРОГРАММЫ
//Примечание: во избежании редких случаев настройки скорости рекомендуется
//            в секции прединициализации page 0 установить параметр bauds=11500
//==================================================================================================
dim=100       	//--Установка яркости;
thc=BLUE      	//--Цвет кисти для рисования;
bkcmd=2        	//--Отправлять данные только когда последняя команда НЕ была выполнена;
//-------------------------------------------------------------------------------------------------
wup=255      	//--После выхода из сна будет загружена последняя страница;
ussp=0       	//--Переход в режим сна при отсутствии данных из UART отключен;
thsp=0        	//--Переход в режим сна при отсутствии касания экрана отключен;
thup=1         	//--Выход из сна при касании;
//-------------------------------------------------------------------------------------------------
printh 00 00 00 ff ff ff 88 ff ff ff	//--Отправка в UART команды о включении панели Nextion;
baud=115200  	//--Установка скорости обмена;
page 0          //--Установка начальной страниц (должна быть последней командой);
//==================================================================================================


//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						БИБЛИОТЕКА ДЛЯ РАБОТЫ С ДИСПЛЕЯМИ NEXTION	
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#ifndef RT_HW_NEXT_h
#define RT_HW_NEXT_h
//-------------------------------------------------------------------------------------------------
#include "RT_HW_BASE.h"						//--Подключение базовой библиотеки;
#define RT_HW_NEXT_VER			  11		//--Номер версии библиотеки;
#define RT_HW_NEXT_MAX_DEVICE	  8			//--Максимальное кол-во допустимых устройств;
#define RT_HW_NEXT_MAX_GRAFIC     8         //--Макcимальное кол-во графиков(на все устройства);
#define RT_HW_NEXT_PERIOD_BLINK   50 //50	//--Период тиков для тактового генератора;
#define RT_HW_NEXT_TIMEOUT_READ   100		//--Тайм-аут на принятие посылки;
#define RT_HW_NEXT_BUFF_REG_SIZE  40		//--Размер приемного буфера посылки из Nextion (8 байт служебные);
#define RT_HW_NEXT_WATCH_DOG_BUSY 10        //--Размер WatchDog(ms) при передаче транзакций;
//-------------------------------------------------------------------------------------------------
#include "0100_API_NEXT/API_NEXT_100_struct.hpp"           	//==Структуры данных;	
//=================================================================================================
//		                           КЛАСС: RT_HW_NEXT
//=================================================================================================
class RT_HW_NEXT{
public:
//------Данные-------------------------------------------------------------------------------------
RT_HW_STRUCT_NEXT_HIVE	hive;									//==Общие данные для работы библиотеки;
RT_HW_STRUCT_NEXT_DEVICE *ptr[RT_HW_NEXT_MAX_DEVICE+1];			//==Массив указателей на данные со структурой устройств;
RT_HW_STRUCT_NEXT_DEVICE zN;									//==Данные для копирования в не инициализированные указатели;
//------Функции------------------------------------------------------------------------------------
RT_HW_NEXT();													//==Конструктор;
#include "0100_API_NEXT/API_NEXT_101_func_direct.hpp"			//==Функции управления;
#include "0100_API_NEXT/API_NEXT_120_func_sendToNextion.hpp"	//==Функции отправки данных  в Nextion;
//=================================================================================================
};  //---END class RT_HW_NEXT
//-------------------------------------------------------------------------------------------------
extern RT_HW_NEXT RT_HW_Next; //--Создание объекта 
//-------------------------------------------------------------------------------------------------
#endif //---RT_HW_NEXT_h
//=================================================================================================









//=================================================================================================
//						Структуры генераторов, задержек времени, генераторов фронтов;
//=================================================================================================	
struct RT_HW_GENERATOR_EVENT_ID  {uint32_t time; uint8_t dir=0;  uint8_t meander:1, event:1;}; 		//--Для генератора меандров и событий;
struct RT_HW_GENERATOR_PULSE_ID  {uint32_t time; uint8_t dir=0;};									//--Для генератора импульсов;
struct RT_HW_GENERATOR_PWM_ID    {uint32_t time; uint8_t dir=0;  uint32_t timeON; uint32_t timeFULL; };//--Для генератора программного ШИМ;
struct RT_HW_GENERATOR_GROUP_ID  {uint32_t time; uint8_t dir=0;  uint8_t  cnt=0; uint8_t ago=0; uint8_t meander=0;};	//--Для генератора пачки импульсов;
struct RT_HW_GENERATOR_DELAY_ID  {uint32_t time; uint8_t dir=0;  uint8_t  cnt=0; uint8_t ago=0;};	//--Для генератора задержек времени;
struct RT_HW_GENERATOR_FRONT_ID  {uint32_t time; uint8_t  meander, event, ago; uint8_t cnt=1;};		//--Для генератора фронтов;
//=================================================================================================
//						 Структура для генератора задач бегущей 1
//=================================================================================================
struct RT_HW_GENERATOR_RUN_ID{                    
uint32_t timeBegin,timeEnd;		//--Переменные для работы со временем;
uint32_t period;				//--Период;
int32_t  cnt;					//--Счетчик;
uint32_t dc=0;					//--Выходное значение бегущей "1";
uint8_t  dir; 					//--Рабочий номер этапа;
uint8_t  modeTime=1; 			//--Тип времени:  =0-micros, =1-millis;
char     modeGen='S'; 			//--Тип счетчика: =S-Saw,    =T-Trig;
uint8_t  direct=0;				//--Направление счета;
uint8_t  top=8;					//--Количество бегущей "1";
uint8_t  event;
};
//=================================================================================================
//						           Структура для генератора задач и делителя событий
//=================================================================================================
struct RT_HW_GENERATOR_TASK_ID   {uint32_t time; uint8_t event=0; uint8_t cnt=0;};					//--Для генератора задач;
struct RT_HW_GENERATOR_DIVIDER_ID{uint8_t  ago;  uint8_t state=0; uint8_t cnt=0;};					//--Для делителя событий;
//=================================================================================================
//						           Структура счетчиков
//=================================================================================================
struct RT_HW_COUNTER_ID {uint8_t reset=1; uint8_t direct=0; int16_t begin=0,step=1,top=100,bottom=0,cnt=0; int32_t var;}; //--Для счетчиков;
//=================================================================================================

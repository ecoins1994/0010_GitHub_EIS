 /*=================================================================================================
                  Инструкция для создания секций CORE_4xx_тип CORE
1.Перечень разделов	на примере
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//						Программная среда ESP32
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//----------------------0.Идентификация программной среды------------------------------------------
//----------------------1.Основные параметры-------------------------------------------------------
//----------------------2.Дополнительные макросы---------------------------------------------------
//----------------------3.Общие библиотеки---------------------------------------------------------
//----------------------4.Таймеры------------------------------------------------------------------
//----------------------5.Интерфейсы UART----------------------------------------------------------
//----------------------6.Интерфейсы i2c-----------------------------------------------------------
//----------------------7.Интерфейсы SPI-----------------------------------------------------------
//----------------------8.Интерфейс CAN------------------------------------------------------------
//----------------------9.Интерфейс Wi-Fi----------------------------------------------------------

//----------------------20.Макросы для работы c пинами через функции WIRING------------------------ 
//----------------------21.Макросы для совместимости с STM32---------------------------------------
//----------------------22.Базовый размер переменной и структура для GPIO--------------------------
//----------------------23.Встроенные функции управления GPIO--------------------------------------
//----------------------24.Макросы прямого управления пинами---------------------------------------
//----------------------25.Макросы для 1-Wire------------------------------------------------------
//-------------------------------------------------------------------------------------------------


//----------------------1.Основные параметры-----------------------------------------------------
#if !defined(RT_HW_CORE_DEFINED) && defined(RT_HW_CORE_ESP32) 
#define RT_HW_CORE_DEFINED             RT_HW_CODE_CORE_ESP32	//--Идентификатор программной среды;
//----------------------1.Основные параметры-----------------------------------------------------
#define	RT_HW_ARCH_CODE        		RT_HW_CODE_ARCH_ESP32		//--Код архитектуры;
#define RT_HW_ARCH_NAME        		"ESP32"						//--Наименование архитектуры;
#define RT_HW_CORE_NAME        		"ESP32"	 					//--Наименование программной среды
//----------------------2.Дополнительные макросы-------------------------------------------------
#define RT_HW_IRAM_ATTR											//--Атрибут для совместимости c ESP8266;	
//#define	RT_HW_BLOCK_SET_RESOLUTION_ADC					    //--Блокировка функции установка разрешения ADC;
#define RT_HW_BLOCK_SET_RESOLUTION_PWM							//--Блокировка функции установка разрешения PWM;
#define RT_HW_BLOCK_I2C_SLAVE									//--Блокировка функций поддержки i2c Slave;
#define RT_HW_FREQ_PWM              1000                        //--Частота для PWM умолчанию;
//----------------------3.Общие библиотеки-------------------------------------------------------
#include <pgmspace.h>											//--Работа с PROGMEM;
#include "esp32-hal-ledc.h"										//--Библиотека для работы с PWM и LED;	
#include <driver/rtc_io.h>										//--Служебные функции;
#if defined(RT_HW_CORE_ESP32S)
#include "BluetoothSerial.h"									//--Библиотека BlueTooth;
#endif
//----------------------4.Таймеры----------------------------------------------------------------
//----------------------4.1 Для ESP32С3----------------------------------------------------------
#if defined(RT_HW_CORE_ESP32C3)
  #define RT_HW_USE_TIMER_NO        1
  #define RT_HW_MAX_NUM_TIMERS      2							//--Максимальное кол-во таймеров
#endif
//----------------------4.2 Для остальных типов ESP32(ESP32S.ESP32S2,ESP32S3)--------------------
#if !defined(RT_HW_USE_TIMER_NO)
  #define RT_HW_USE_TIMER_NO        3
  #define RT_HW_MAX_NUM_TIMERS      4							//--Максимальное кол-во таймеров
#endif
//----------------------5.Интерфейсы UART--------------------------------------------------------

//----------------------6.Интерфейсы i2c---------------------------------------------------------
#include <Wire.h>												//--Подключение библиотеки i2c;	
#define RT_HW_I2C_SPEED_DEFAULT  	RT_HW_I2C_SPEED_FM			//--Код скорости шины i2c (default 400kHz);
#define RT_HW_I2C_BLOCK_USER_PINS	0							//--Блокировка изменения пинов i2c;
//----------------------7.Интерфейсы SPI---------------------------------------------------------
//----------------------8.Интерфейс CAN----------------------------------------------------------
//----------------------9.Интерфейс Wi-Fi--------------------------------------------------------
#include <SPI.h>												//--Подключение библиотеки SPI	
#define RT_HW_SPI_SPEED				RT_HW_SPI_SPEED_ST			//--Скорость SPI в Гц стандартная; 
#define RT_HW_SPI_BIT_ORDER         MSBFIRST					//--Порядок следования битов в байте SPI;
#define RT_HW_SPI_DATA_MODE         SPI_MODE0					//--Режим для импульсов SPI;
#define RT_HW_SPI_INTERRUPT_MODE	0							//--Режим работы с прерываниями SPI;
//#define RT_HW_SPI_BLOCK_USER_PINS	0							//--Блокировка изменения пинов SPI;
#define RT_HW_SPN_DELAY				1							//--Задержка для RT_HW_PIN_DIR_WRITE_HIGH
//----------------------20.Макросы для работы c пинами через функции WIRING------------------------ 
#define RT_HW_PIN_MODE_INPUT  				 INPUT				//--Дискретный вход;
#define RT_HW_PIN_MODE_OUTPUT  				 OUTPUT				//--Дискретный выход;
#define RT_HW_PIN_MODE_INPUT_PULLUP  		 INPUT_PULLUP 		//--Дискретный вход с подтяжкой к +Vcc;
//----------------------21.Макросы для совместимости с STM32---------------------------------------
#define RT_HW_PIN_MODE_INPUT_FLOATING  		 INPUT				//--Дискретный вход - аналог INPUT;
#define RT_HW_PIN_MODE_INPUT_PULLDOWN  		 INPUT_PULLDOWN		//--Дискретный вход с подтяжкой к GND;
#define RT_HW_PIN_MODE_INPUT_ANALOG  		 INPUT				//--Аналоговый вход;
#define RT_HW_PIN_MODE_OUTPUT_OPEN_DRAIN  	 OUTPUT_OPEN_DRAIN	//--Дискретный выход с открытым выходом;
#define RT_HW_PIN_MODE_OUTPUT_PWM			 OUTPUT				//--ШИМ выход;
#define RT_HW_PIN_MODE_OUTPUT_PWM_OPEN_DRAIN OUTPUT				//--ШИМ выход с открытым коллектором;
//----------------------22.Базовый размер переменной и структура для GPIO---------------------------
#define RT_HW_DATE_TYPE 		uint32_t						
struct  RT_HW_PIN_DIR_ID {uint32_t pin; uint32_t dir=0; uint32_t bit; uint32_t num; uint32_t freq;};
//----------------------23.Встроенные функции управления GPIO---------------------------------------
//----------------------24.Макросы прямого управления пинами---------------------------------------
#define RT_HW_PIN_DIR_SET_ID(id,p) 	        id.pin=p;
#define RT_HW_PIN_DIR_MODE_INPUT(id)        RT_HW_directModeInput(id.pin);
#define RT_HW_PIN_DIR_MODE_PULLUP(id) 	    pinMode(id.pin,INPUT_PULLUP);
#define RT_HW_PIN_DIR_MODE_OUTPUT(id) 	    RT_HW_directModeOutput(id.pin); 	//pinMode(id.pin,OUTPUT);
#define RT_HW_PIN_DIR_READ(id)              RT_HW_directRead(id.pin) 				//--digitalRead(id.pin)
#define RT_HW_PIN_DIR_WRITE(id,val) 		
#define RT_HW_PIN_DIR_WRITE_LOW(id)         RT_HW_directWriteLow(id.pin);		//digitalWrite(id.pin,LOW);
#define RT_HW_PIN_DIR_WRITE_HIGH(id)        RT_HW_directWriteHigh(id.pin);		//--digitalWrite(id.pin,HIGH);
//----------------------25.Макросы для 1-Wire------------------------------------------------------
struct  RT_HW_PIN_ONEWIRE_ID {uint32_t pin;};  //--dir используется в функциях настройки пинов;
#define RT_HW_PIN_ONEWIRE_SET_ID(id,p) 	    	
#define RT_HW_PIN_ONEWIRE_NOINTERRUTS            
#define RT_HW_PIN_ONEWIRE_INTERRUTS             
#define RT_HW_PIN_ONEWIRE_MODE_INPUT(id)                                    
#define RT_HW_PIN_ONEWIRE_MODE_INPUT_LOW(id)    
#define RT_HW_PIN_ONEWIRE_MODE_OUTPUT_LOW(id)   
#define RT_HW_PIN_ONEWIRE_WRITE_HIGH(id)        
#define RT_HW_PIN_ONEWIRE_WRITE_LOW(id)         
#define RT_HW_PIN_ONEWIRE_READ(id)              
//-------------------------------------------------------------------------------------------------
#endif
//=================================================================================================	
*/				  
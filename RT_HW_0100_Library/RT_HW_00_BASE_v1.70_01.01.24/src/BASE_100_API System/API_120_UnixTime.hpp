
//=================================================================================================
//						1.Получение времени и даты из системных макросов __TIME__ и __DATE__
//=================================================================================================
void unixSetSystemTimeDate(RT_HW_STRUCT_UNIX_ID &id){
//-----------------Получение секунд, минут, часов--------------------------------------------------
mess.str=__TIME__;
id.seconds=(((mess.str[6]-'0')*10)+(mess.str[7]-'0'));
id.minutes=(((mess.str[3]-'0')*10)+(mess.str[4]-'0'));
id.hours  =(((mess.str[0]-'0')*10)+(mess.str[1]-'0'));
//-----------------Получение дня, года 4 знака, года 2 знака---------------------------------------
mess.str=__DATE__;
id.day  =((((mess.str[4] >= '0') ? (mess.str[4]) : '0')-'0')*10) + (mess.str[5]-'0');			
id.year =((mess.str[7]-'0')*1000)+((mess.str[8]-'0')*100)+((mess.str[9]-'0')*10)+(mess.str[10]-'0');
id.year2=id.year % 100;																				
//-----------------Получение месяца----------------------------------------------------------------
id.month=1;																							
if((mess.str[0] == 'J') && (mess.str[1] == 'a') && (mess.str[2] == 'n')){id.month= 1;}
if((mess.str[0] == 'F'))												{id.month= 2;}
if((mess.str[0] == 'M') && (mess.str[1] == 'a') && (mess.str[2] == 'r')){id.month= 3;}
if((mess.str[0] == 'A') && (mess.str[1] == 'p'))						{id.month= 4;}
if((mess.str[0] == 'M') && (mess.str[1] == 'a') && (mess.str[2] == 'y')){id.month= 5;}
if((mess.str[0] == 'J') && (mess.str[1] == 'u') && (mess.str[2] == 'n')){id.month= 6;}
if((mess.str[0] == 'J') && (mess.str[1] == 'u') && (mess.str[2] == 'l')){id.month= 7;}
if((mess.str[0] == 'A') && (mess.str[1] == 'u'))						{id.month= 8;}
if((mess.str[0] == 'S'))												{id.month= 9;}
if((mess.str[0] == 'O'))												{id.month=10;}
if((mess.str[0] == 'N'))												{id.month=11;}
if((mess.str[0] == 'D'))												{id.month=12;}
};
//=================================================================================================
void unixSetSystemTimeDate(){unixSetSystemTimeDate(unixID);};

//=================================================================================================
//						2.Установка начальных значений (для тестирования soft)
//=================================================================================================
void unixSetTimeDate(RT_HW_STRUCT_UNIX_ID &id, uint8_t vHour, uint8_t vMinute, uint8_t vSecond, uint8_t vDay, uint8_t vMonth, uint16_t vYear){
id.hours=vHour; id.minutes=vMinute;	id.seconds=vSecond;
id.day=vDay;    id.month=vMonth;	id.year=vYear;	
};
//=================================================================================================
void unixSetTimeDate(uint8_t vHour, uint8_t vMinute, uint8_t vSecond, uint8_t vDay, uint8_t vMonth, uint16_t vYear){
                                               unixSetTimeDate(unixID,vHour,vMinute,vSecond,vDay,vMonth,vYear);}
//=================================================================================================
//						3.Вспомогательная функция
//=================================================================================================
uint8_t unixGetDim(uint8_t i){return (i < 7) ? ((i == 1) ? 28 : ((i & 1) ? 30 : 31)) : ((i & 1) ? 31 : 30);};
//=================================================================================================
//						4.Конвертирование даты и времени в UNIX формат
//=================================================================================================
void unixGetSTAMP(RT_HW_STRUCT_UNIX_ID &id){
if(abs(id.zone)<=12){id.w2=id.zone*60;}		//--Пересчет   параметра сдвига часового пояса в мин; 
else                {id.w2=id.zone;}		//--Сохранение параметра сдвига часового пояса в мин; 
id.b0=(id.month >= 3) ? 1 : 0; 
id.w0=id.year + id.b0 - 1970;	 
id.w1=0;
//for(id.idx=0; id.idx<(id.month-1); id.idx++){id.w1 += (id.idx < 7) ? ((id.idx == 1) ? 28 : ((id.idx & 1) ? 30 : 31)) : ((id.idx & 1) ? 31 : 30);}
for(id.idx=0; id.idx<(id.month-1); id.idx++){id.w1 += unixGetDim(id.idx);}
id.timeUNIX=(((id.day - 1 + id.w1 + ((id.w0 + 1) / 4) - ((id.w0 + 69) / 100) + ((id.w0 + 369) / 100 / 4) + 365 * (id.w0-id.b0)) * 24ul + id.hours) * 60ul + id.minutes - id.w2) * 60ul + id.seconds;
};
//=================================================================================================
void unixGetSTAMP(){unixGetSTAMP(unixID);};
//=================================================================================================
//						5.Получение текущего времени
//=================================================================================================
void unixGetTime(RT_HW_STRUCT_UNIX_ID &id){
id.d0=id.timeUNIX+ 3600*id.zone;	    					//--UNIX время с учетом часового пояса;
//-------------------------------------------------------------------------------------------------
id.seconds = id.d0 % 60UL; 	id.d0 /= 60UL;					//--Сохранение секунд;
id.minutes = id.d0 % 60UL;	id.d0 /= 60UL;					//--Сохранение минут;
id.b0      = id.d0 % 24UL;	id.d0 /= 24UL;					//--Часы;
if(id.b0!=id.hours){id.freshHours=1;}						//--Установка флага обновления часов;
id.freshHours=1;
id.hours=id.b0;												//--Сохранение часов;
//-------------------------------------------------------------------------------------------------
};
//=================================================================================================
void unixGetTime(){unixGetTime(unixID);};
//=================================================================================================
//						6.Получение текущей даты 
//=================================================================================================
void unixGetDate(RT_HW_STRUCT_UNIX_ID &id){
id.d0=(id.timeUNIX+ 3600*id.zone)/86400;	    			//--UNIX время с учетом часового пояса;
//-------------------------------------------------------------------------------------------------
id.d1=(uint32_t)(((4 * id.d0 + 102032)/146097) + 15);		//--Промежуточная переменная;
id.d0=(uint32_t)(      id.d0 + 2442113 + id.d1-(id.d1/4));	//--Промежуточная переменная;
id.w0=(uint16_t)((20 * id.d0 - 2442) / 7305);				//--Год   (предварительно);
id.d1=id.d0 - (365 * id.w0) - (id.w0/4);			    	//--Промежуточная переменная;
id.w1=(uint8_t)(id.d1 * 1000 / 30601);						//--Месяц (предварительно);
id.w2=(uint8_t)(id.d1 - (id.w1 * 30) - ((id.w1*601)/1000));	//--День (предварительно);
if(id.d1<=13){id.w0-= 4716; id.w1-= 1;}
else         {id.w0-= 4715; id.w1-= 13;}
//-------------------------------------------------------------------------------------------------
if(id.w2!=id.day){id.freshDay=1;}							//--Установка флага обновления дня;
id.year =id.w0;
id.month=id.w1;
id.day  =id.w2;
//-------------------------------------------------------------------------------------------------
};
//=================================================================================================
void unixGetDate(){unixGetDate(unixID);};
//=================================================================================================
//						7.Получение текущегодня недели
//=================================================================================================
void unixGetWeekDay(RT_HW_STRUCT_UNIX_ID &id){
id.w0=id.year; 
if(id.w0 >= 2000) {id.w0 -= 2000;}
id.w1=id.day;
for(id.idx = 1; id.idx < id.month; ++id.idx){id.w1 +=unixGetDim(id.idx - 1);}
if (id.month > 2 && id.w0 % 4 == 0)      {id.w1++;}
id.weekDay=(id.w1 + 365 * id.w0 + (id.w0 + 3) / 4 + 4) % 7 + 1;	
};
//=================================================================================================
void unixGetWeekDay(){unixGetWeekDay(unixID);};
//=================================================================================================
//						8.Получение параметров времени
//=================================================================================================
void unixGetTotal(RT_HW_STRUCT_UNIX_ID &id){
									unixGetTime(id);		//--Вычисление времени;
if(id.freshHours){id.freshHours=0; 	unixGetDate(id);}		//--Вычисление даты;
if(id.freshDay)  {id.freshDay=0;   	unixGetWeekDay(id);}	//--Вычисление дня недели;
};
//=================================================================================================
void unixGetTotal(){unixGetTotal(unixID);};
//=================================================================================================
//						7.Получение текущего времени и даты, дня недели по дню,месяцу,году
//=================================================================================================
uint8_t unixGetWeekDay(uint8_t d, uint8_t m, uint16_t y){
if(y >= 2000) {y -= 2000;}
uint16_t days = d;
for(uint8_t i = 1; i < m; ++i){days +=unixGetDim(i - 1);}
if (m > 2 && y % 4 == 0)      {days++;}
return (days + 365 * y + (y + 3) / 4 + 4) % 7 + 1;	
};
//=================================================================================================




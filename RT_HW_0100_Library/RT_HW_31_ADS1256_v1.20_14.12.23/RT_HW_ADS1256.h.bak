//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//
//           					ADS1256 (частота кристалла 7.68мГц)
//
//-------------------------------------------------------------------------------------------------
//  ecoins (ecoins@mail.ru) 
//  01.12.2023: Begin version
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
#ifndef RT_HW_ADS1256_h
#define RT_HW_ADS1256_h
#include "RT_HW_BASE.h"
//#define RT_HW_ADS1256_DEBUG							//--Разрешение функций DEBUG (вывод на консоль и пр.);
#define RT_HW_ADS1256_VER 		 (uint8_t)121			//--Номер версии;
#define RT_HW_ADS1256_VER_NAME 	"12.1 14.12.2023"		//--Наименование верси;
#include "0100_API_ADS1256/API_ADS1256_100_defined.hpp"	//--Определение кодов команд, номеров пинов по умолчанию,структур данных;
//=================================================================================================
// 								КЛАСС 	RT_HW_ADS1256
//=================================================================================================
class RT_HW_ADS1256 {
public:
#include "0100_API_ADS1256/API_ADS1256_101_func.hpp"	//--Функции для управления ADS1256 через регистры управления;
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//									1.Управление устройством
//+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
void direct(RT_HW_ADS1256_DEV &id, uint8_t &run){
//-------------------------------------------------------------------------------------------------
if(run>0) {id.run=1;}; 									//--Проверка внешнего сигнала запуска; 
id.fresh=id.meterOk=id.clear=0;							//--Сброс событий;
//-------------------------------------------------------------------------------------------------
//				1.250 Статическая задержка
//-------------------------------------------------------------------------------------------------
if(id.dir==250) {if(RT_HW_Base.checkDelayMS(id.checkDIR)) {return;} id.dir=id.checkDIR.pointTime;}	//--Задержка в ms;
if(id.dir==251) {if(RT_HW_Base.checkDelayUS(id.checkDIR)) {return;} id.dir=id.checkDIR.pointTime;}	//--Задержка в us;
//-------------------------------------------------------------------------------------------------
//				1.000.Настройка параметров функции direct()
//-------------------------------------------------------------------------------------------------
if(id.dir==0){
initParameters(id);																//--Инициализация параметров;
if(id.err)							 	{id.codeErr=70; id.dir=210;	return;}	//--По ошибке переход на заглушку;
if(id.custom!=1)												   {return;}	//--Ожидание завершения настройки;												
id.checkDIR.pointTime=20;  id.checkDIR.sizeDelay=10;	id.dir=250;	return;}	//--Переход по результатам настройки после задержки (ms);	
//-------------------------------------------------------------------------------------------------
//				1.020.Начало цикла измерения
//------------------------------------------------------------------------------------------------
if(id.dir==20) {
if(!id.run){return;} 															//--Ожидание запуска измерения;		
id.run=id.step=id.codeErr=0;													//--Сброс кода ошибок;
if(id.codeSPS !=id.userSPS) {id.codeSPS =id.userSPS;  id.beginOk=0;}			//--Проверка на изменение параметра скорости;
if(id.codeGAIN!=id.userGAIN){id.codeGAIN=id.userGAIN; id.beginOk=0;}  		//--Проверка на изменение параметра усиления;
if(!id.initOk) {										id.dir=30;	return;}	//--Проверка на настройку SPI; 
if(!id.beginOk){ 										id.dir=40;	return;}	//--Проверка на настройку ADS1256;  
														id.dir=50;	return;}	//--Переход на измерение;
//-------------------------------------------------------------------------------------------------
//				1.030.Вызов функции настройки устройства(SPI, пины)
//-------------------------------------------------------------------------------------------------
if(id.dir==30){              									
   id.status=RT_HW_Base.spiGetStatus(id.bus);									//--Получение состояния шины SPI;
if(id.status==0){if(!RT_HW_Base.spiBegin(id.bus))   {           	return;}}	//--Инициализация       шины SPI как Master; 
   id.status =RT_HW_Base.spiGetStatus(id.bus);									//--Повторное получение состояния шины SPI;
if(id.status!=1){						id.codeErr=71;  id.dir=210;	return;}	//--Выход по ошибке настройки ADS1256;
										id.initOk=1; 	id.dir=40; 	return;}
	
	//RT_HW_Base.consoleTest(String(F("ADS1256 DIRECT.30.3 status")),id.status,';','U');
   // RT_HW_Base.consoleTest(String(F(" dir")),id.dir,'E','U');								
										
										//return;}	//--Установка флага инициализации, если SPI настроен; 

//id.checkDIR.pointTime=40;  id.checkDIR.sizeDelay=100;	id.dir=250;	return;}	//--Переход по результатам настройки после задержки (ms);
//-------------------------------------------------------------------------------------------------
//				1.040.Настройка ADC
//-------------------------------------------------------------------------------------------------
if(id.dir==40){
begin(id);																	//--Вызов настройки ADS1256;
if(id.err)   {							id.codeErr=72;  id.dir=210;	return;}//--Выход по ошибке настройки ADS1256 с задержкой 500ms;			
if(id.action){return;} 	id.beginOk=1; 					id.dir=50;  return;}//--Ожидание завершения begin() и переход на начало;
//-------------------------------------------------------------------------------------------------
//				1.050.	Настройка параметров перед началом измерения
//-------------------------------------------------------------------------------------------------
if(id.dir==50){
id.step=0; id.cntDebug++;	id.numChannel=-1; 			id.dir=60;			}//--Настройка начального канала;						
//-------------------------------------------------------------------------------------------------
//				1.060. Циклический Выбор канала
//-------------------------------------------------------------------------------------------------
if(id.dir==60){id.step=0; 
do{ id.numChannel++; id.cntErrRepeat=0;				//--Увеличение номера канала и сброс счетчика одиночных ошибок;
 	if(id.numChannel>11){								id.dir=100;	break;}		//--Выход по завершению доступных каналов;   
	if(getADCpermit(id,id.numChannel))				   {id.dir=70;  break;} 	//--Переход на измерение канала;
}while(1);}																		//--Конец оператора do{} - перебор измеряемых каналов;
//-------------------------------------------------------------------------------------------------
//				1.070.Чтение канала
//-------------------------------------------------------------------------------------------------
if(id.dir==70){
readChannel(id,id.numChannel); 													//--Запуск канала и измерение;
if(id.err){								 id.codeErr=73; id.dir=210;	return;}	//--Выход по ошибке    
if(id.action){return;} id.fresh=1;	                    id.dir=60;	return;} 	//--Ожидание завершения и возврат на чтение следующего канала;
//-------------------------------------------------------------------------------------------------
//				1.100.Завершение цикла измерения
//-------------------------------------------------------------------------------------------------
if(id.dir==100){id.meterOk=1;                           id.dir=20;  return;}	//--Возврат на начало цикла измерения;	
//-------------------------------------------------------------------------------------------------
//				1.210.Обработка ошибок 
//-------------------------------------------------------------------------------------------------
if(id.dir==210){
id.ok=id.initOk=id.beginOk=0; id.clear=id.err=1; 
	RT_HW_Base.consoleTest(String(F("ADS1256 DIRECT.210.1 status")),id.status, ';','U');
	RT_HW_Base.consoleTest(String(F(" codeErr")),                   id.codeErr,'E','U');

if(id.codeErr==70){																	return;}	//--Заглушка по фатальной ошибке настройки параметров;																	
if(id.codeErr==71){id.checkDIR.pointTime=20; id.checkDIR.sizeDelay=500; id.dir=250;	return;}	//--Задержка 500 ms    по ошибке инициализации ADS1256 [begin()]; 
if(id.codeErr==72){id.checkDIR.pointTime=20; id.checkDIR.sizeDelay= 50; id.dir=250;	return;}	//--Задержка  50 ms    по ошибке измерения канала      [channel()]; 
																		id.dir=20;	return;}	//--Возврат;
};	//====END direct()=============================================================================

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//									2.Настройка ADS1256
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
void begin(RT_HW_ADS1256_DEV &id){
//-------------------------------------------------------------------------------------------------
if(id.step==250){if(RT_HW_Base.checkDelayMS(id.checkSTEP)) {return;} id.step=id.checkSTEP.pointTime; return;}	//--Задержка в ms;
if(id.step==251){if(RT_HW_Base.checkDelayUS(id.checkSTEP)) {return;} id.step=id.checkSTEP.pointTime; return;}	//--Задержка в us;
//-------------------------------------------------------------------------------------------------
//				2.000.Настройка параметров
//-------------------------------------------------------------------------------------------------
if(id.step==0){
id.codeBUFEN=id.userBUFEN & 0x01;				//--Настройка кода разрешения буферирования; 
setCodeADCON(id);								//--Настройка кода усиления входного сигнала;
setCodeDRATE(id);								//--Настройка кода скорости преобразования;
setCodeMUX  (id, 0);							//--Настройка кода канала AIN0;
id.cntErrRptDRDY=0;
getFactorFV(id);
id.checkSTEP.state=0;							//--Сброс параметров таймера;							
id.action=1; id.err=0; id.step=10; }			//--Сброс флагов,параметров и переход а продолжение; 			
//-------------------------------------------------------------------------------------------------
//				10.Команда SDTAC: 	0x0F 							[time~100 us]   [Остановка операций]
//-------------------------------------------------------------------------------------------------
if(id.step==10) {
if(!sendCommand(id,RT_HW_ADS1256_CMD_SDATAC))   					{return;}	//--Ожидание от SPI; 
id.checkSTEP.pointTime=12;	id.checkSTEP.sizeDelay=100;	id.step=251; return;}	//--Переход на step=12 после задержки(us);
//-------------------------------------------------------------------------------------------------
//				12.Запись STATUS: 	0x50 0x02 						[time~100 us] 	STATUS | (BUFEN<<1)
//-------------------------------------------------------------------------------------------------
if(id.step==12) {	
if(!writeReg(id,RT_HW_ADS1256_REG_STATUS,0x02)) 					{return;}	//--Ожидание от SPI;  
id.checkSTEP.pointTime=15;	id.checkSTEP.sizeDelay=100; id.step=251; return;}	//--Переход на step=15 после задержки (us); 
//-------------------------------------------------------------------------------------------------
//				15.Чтение STATUS: 	0x01 0x00 ->~0x32				[time~100 us] 	[Идентификации устройства]
//-------------------------------------------------------------------------------------------------
if(id.step==15) {
if(!readReg(id,RT_HW_ADS1256_REG_STATUS))     	 					{return;}	//--Ожидание от SPI; 
id.vSTATUS=id.vReg8; 		   id.vID  =(id.vSTATUS>>4);  						//--Получение значений STATUS,       STATUS.ID; 
id.vBUFEN=(id.vSTATUS>>1)&0x1; id.vDRDY=id.vSTATUS & 01; 						//--Получение значений STATUS.BUFEN, STATUS.VRDY;        
//-----------------Обработка ошибки идентификации устройства-----------------
if(id.vDRDY || (!id.vBUFEN)){													//--Проверка на ошибку: устройство не занято или бит BUFEN=0;
if(id.cntErrRptDRDY++>=5) { id.err=1; id.codeErr=70; 	id.step=0;   return;}  	//  Выход по ошибке после 5-ти попыток; 
id.checkSTEP.pointTime=15;  id.checkSTEP.sizeDelay=10;  id.step=250; return;}	//--Переход на повторение после задержки (10 ms); 
//---------------------------------------------------------------------------
id.checkSTEP.pointTime=20;  id.checkSTEP.sizeDelay=100;	id.step=251; return;}	//--Переход на продолжение после задержки (us); 																	  

//-------------------------------------------------------------------------------------------------
//									0x01 0x00    	->~0x32
//				20.Команда SDTAC: 	0x0F   							[time~100 us;]	[Остановка операций] 
//-------------------------------------------------------------------------------------------------
if(id.step==20) {	
getDRDY(id);	 																//--Получение DRDY; 
if(id.errDRDY)	 {id.err=0; 		 					id.step=0;	 return;}	//--Выход по ошибочной ситуации;
if(id.actDRDY){								  	 			 	 	 return;}	//--Ожидание освобождение устройства (id.drty.bus==0);	
if(!sendCommand(id,RT_HW_ADS1256_CMD_SDATAC))   					{return;}   //--Ожидание от SPI;  
id.checkSTEP.pointTime=30;  id.checkSTEP.sizeDelay=100; id.step=251; return;}	//--Переход на продолжение после задержки (us);       																		
//-------------------------------------------------------------------------------------------------
//									0x01 0x00 		->~0x32
//				30.Команда RESET: 	0xFE 							[time~600 us] 
//-------------------------------------------------------------------------------------------------
if(id.step==30) {
getDRDY(id);	 																//--Получение DRDY;
if(id.errDRDY)	{id.err=0; 								id.step=0;	 return;}	//--Выход по ошибочной ситуации;
if(id.actDRDY){ 					  			 				 	 return;}	//--Ожидание освобождение устройства (id.drty.bus==0);	
if(!sendCommand(id,RT_HW_ADS1256_CMD_RESET))	   					{return;} 	//--Ожидание от SPI; 
id.checkSTEP.pointTime=40; id.checkSTEP.sizeDelay=600;	id.step=251; return;}	//--Переход на продолжение после задержки (us);  				   
//-------------------------------------------------------------------------------------------------
//									0x01 0x00 		->~0x32
//				40.Запись STATUS: 	0x50 0X00 ~0x32					[time~300 us] 
//-------------------------------------------------------------------------------------------------
if(id.step==40) {
getDRDY(id);	 																//--Получение DRDY;
if(id.errDRDY)	{id.err=0; 								id.step=0;	 return;}	//--Выход по ошибочной ситуации;
if(id.actDRDY){ 					  							 	 return;}	//--Ожидание освобождение устройства (id.drty.bus==0);	
id.codeSTATUS=(id.vID<<4) | ((id.codeBUFEN & 0x1)<<1); 							//--Формирование codeSTATUS;
if(!writeReg(id,RT_HW_ADS1256_REG_STATUS,id.codeSTATUS))			{return;}	//--Ожидание от SPI; 
id.checkSTEP.pointTime=50;	id.checkSTEP.sizeDelay=300;	id.step=251; return;}	//--Переход на продолжение после задержки (us); 				 
//-------------------------------------------------------------------------------------------------
//									0x01 0x00 		->~0x32
//				50.Запись ADCON: 	0x52 0X00 ~0x01   				[time~250 us]
//-------------------------------------------------------------------------------------------------
if(id.step==50) {
getDRDY(id);	 																//--Получение DRDY; 
if(id.errDRDY)	{id.err=0; 								id.step=0;	 return;}	//--Выход по ошибочной ситуации;
if(id.actDRDY){ 					  								 return;}	//--Ожидание освобождение устройства (id.drty.bus==0);	
if(!writeReg(id,RT_HW_ADS1256_REG_ADCON,id.codeADCON))				{return;}	//--Ожидание от SPI;
id.checkSTEP.pointTime=60;	id.checkSTEP.sizeDelay=250; id.step=251; return;}	//--Переход на продолжение после задержки (us);				 
//-------------------------------------------------------------------------------------------------
//									0x01 0x00 ->~0x32
//				60.Запись DRATE: 	0x53 00 ~0x82 					[time~11 ms] !!!
//-------------------------------------------------------------------------------------------------
if(id.step==60) {
getDRDY(id);	 																//--Получение DRDY;
if(id.errDRDY)	{id.err=0; 								id.step=0;	 return;}	//--Выход по ошибочной ситуации;
if(id.actDRDY){ 					  							 	 return;}	//--Ожидание освобождение устройства (id.drty.bus==0);	
if(!writeReg(id,RT_HW_ADS1256_REG_DRATE,id.codeDRATE))				{return;}	//--Запись регистра DRATE: 0x53, xxxx;
id.checkSTEP.pointTime=70;	id.checkSTEP.sizeDelay=11;	id.step=250; return;}	//--Переход на продолжение после задержки (ms);				 				 
//-------------------------------------------------------------------------------------------------
//									0x01 0x00 ->~0x32
//				70.Калибровка: 		0xF0							[time~32 ms] !!! 
//-------------------------------------------------------------------------------------------------
if(id.step==70) {
getDRDY(id);	 																//--Получение DRDY;
if(id.errDRDY)	{id.err=0; 								id.step=0;	 return;}	//--Выход по ошибочной ситуации;
if(id.actDRDY){ 					  			 				 	 return;}	//--Ожидание освобождение устройства (id.drty.bus==0);	
if(!sendCommand(id,RT_HW_ADS1256_CMD_SELFCAL))						{return;}   //--Команда калибровки: 0xF0;	
id.checkSTEP.pointTime=80;	id.checkSTEP.sizeDelay=32;	id.step=250; return;}	//--Переход на продолжение после задержки (ms);				 
//-------------------------------------------------------------------------------------------------
//				80.Контроль DRDY:	0x01 0x00 ->~0x32				[time~10 ms] !!! 
//-------------------------------------------------------------------------------------------------
if(id.step==80) {
getDRDY(id);																	//--Получение DRDY c задержкой перед проверкой SPI->STATUS.DRDY;
if(id.errDRDY)	{id.err=0; 								id.step=0;	 return;}	//--Выход по ошибочной ситуации;
if(id.actDRDY){ 					  			 				 	 return;}	//--Ожидание освобождение устройства (id.drty.bus==0);	 			
id.checkSTEP.pointTime=90;	id.checkSTEP.sizeDelay=10; 	id.step=250; return;}	//--Переход на продолжение после задержки (ms);		
//-------------------------------------------------------------------------------------------------
//				90.Контроль STATUS:	0x50 0x00 ->~0x32				[time~0 us]; 
//-------------------------------------------------------------------------------------------------
if(id.step==90) {
if(!readReg(id,RT_HW_ADS1256_REG_STATUS))							{return;}   //--Ожидание от SPI;		
id.vSTATUS=id.vReg8;	id.vID  =(id.vSTATUS>>4); 		id.step=92;  return;}	//--Переход на продолжение;
//-------------------------------------------------------------------------------------------------
//				92.Контроль ADCON:	0x52 0x00 ->~0x00				[time~0 us]; 
//-------------------------------------------------------------------------------------------------
if(id.step==92) {
if(!readReg(id,RT_HW_ADS1256_REG_ADCON))							{return;}   //--Ожидание от SPI;		
id.vADCON=id.vReg8;										id.step=93;  return;}	//--Переход на продолжение;
//-------------------------------------------------------------------------------------------------
//				93.Контроль DRATE: 0x53 0x00 ->~0x00 				[time~0 us]; 
//-------------------------------------------------------------------------------------------------
if(id.step==93) {
if(!readReg(id,RT_HW_ADS1256_REG_DRATE))							{return;}   //--Ожидание от SPI;		
id.vDRATE=id.vReg8;										id.step=100; return;}	//--Переход на продолжение;
//-------------------------------------------------------------------------------------------------
//				100.Команда SDTAC: 0x0F 							[time~100 us]	[Остановка операций]
//-------------------------------------------------------------------------------------------------
if(id.step==100) {
if(!sendCommand(id,RT_HW_ADS1256_CMD_SDATAC))   					{return;}	//--Ожидание отправки команды SDATAC (для устранения конфликтов на шине SPI); 
id.checkSTEP.pointTime=200; id.checkSTEP.sizeDelay=100;	id.step=251; return;}	//--Переход на продолжение после задержки (us);					 
//-------------------------------------------------------------------------------------------------
//				200.Успешный выход
//-------------------------------------------------------------------------------------------------
if(id.step==200){
getFactorFV(id);				
id.ok=id.beginOk=id.beginFresh=1; 		id.action=0;	id.step=0;   return;} 	
//-------------------------------------------------------------------------------------------------
//				210.Выход по ошибке;
//-------------------------------------------------------------------------------------------------
if(id.step==210){                 			
id.ok=id.beginOk=0;id.beginFresh=1; 	id.err=1;		id.step=0;   return;} 
//-------------------------------------------------------------------------------------------------
};		//====END begin();


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//									3.Чтение канала
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
void readChannel(RT_HW_ADS1256_DEV &id, uint8_t numChannel){
//-------------------------------------------------------------------------------------------------
if(id.step==250){if(RT_HW_Base.checkDelayMS(id.checkSTEP)) {return;} id.step=id.checkSTEP.pointTime;}	//--Задержка в ms;
if(id.step==251){if(RT_HW_Base.checkDelayUS(id.checkSTEP)) {return;} id.step=id.checkSTEP.pointTime;}	//--Задержка в us;
//-------------------------------------------------------------------------------------------------
//				3.000.Установка параметров	
//-------------------------------------------------------------------------------------------------
if(id.step==0){
setCodeMUX(id,numChannel);	//--Получение кода управления мультиплексором
id.action=1; id.err=0; 								id.step=20;}
//-------------------------------------------------------------------------------------------------
//				3.020.Контроль DRDY:	0x01 0x00 ->~0x32				[time~10 ms] !!! 
//-------------------------------------------------------------------------------------------------
if(id.step==20) {
getDRDY(id);										//--Получение DRDY; 
if(id.errDRDY){id.err=1; id.step=0; 	 return;}
if(id.actDRDY){							 return;}	id.step=30;}
//-------------------------------------------------------------------------------------------------
//				3.030.Запись   MUX:  	0xFC xxxx
//              3.031.Синхронизация: 	0xFC
//              3.032.ЗАПУСК ADC:   	0x00 
//              3.032.Задержка 
//-------------------------------------------------------------------------------------------------
if(id.step==30) {if(!writeReg(   id,RT_HW_ADS1256_REG_MUX,  id.codeMUX)){return;} 	id.step=31;}	//--Ожидание от SPI; 
if(id.step==31) {if(!sendCommand(id,RT_HW_ADS1256_CMD_SYNC))	   		{return;} 	id.step=32;}	//--Ожидание от SPI; 
if(id.step==32) {if(!sendCommand(id,RT_HW_ADS1256_CMD_WAKEUP))	   		{return;} 	id.step=33;}	//--Ожидание от SPI; 
if(id.step==33) {id.checkSTEP.pointTime=40; id.checkSTEP.sizeDelay=id.timeChannel; 	id.step=251; return;}//--Переход на продолжение после задержки (us); 
//-------------------------------------------------------------------------------------------------
//				3.040.Контроль DRDY: 	0x01 0x00 ->~0x32				
//-------------------------------------------------------------------------------------------------
if(id.step==40) {
getDRDY(id);										//--Получение DRDY; 
if(id.errDRDY){id.err=1; id.step=0; 	 return;} 
if(id.actDRDY)							{return;}	id.step=50;}	
//-------------------------------------------------------------------------------------------------			
//				3.050.Чтение ADC:		0x01 0x00 0x00 0x00 ->0x00 ~0xXX ~0xXX ~0xXX 
//-------------------------------------------------------------------------------------------------
if(id.step==50) {
if(!RT_HW_Base.spiSetBusy(id.bus)){		return;}		//--Захват шины или выход, если шина занята;
//-------------------------------------------------------------------------------------------------
csLOW(id);															//--cs=LOW;
RT_HW_Base.spiBeginTransaction(id.speed,MSBFIRST,SPI_MODE1,id.bus); //--Начало транзакции;
RT_HW_Base.spiTransfer((RT_HW_ADS1256_CMD_RDATA),          id.bus); //--1-й байт команды: 0x10 = 0001 0000;
delayMicroseconds(7); 												//--Задержка t6=(4*tCLKIN 50*0.13=6.5 us);
id.arr[2] = RT_HW_Base.spiTransfer(0,id.bus);						//--Чтение старшего байта;
id.arr[1] = RT_HW_Base.spiTransfer(0,id.bus);						//--Чтение среднего байта;
id.arr[0] = RT_HW_Base.spiTransfer(0,id.bus);						//--Чтение младшего байта;
delayMicroseconds(1); 												//--Задержка t11=(4*tCLKIN 4*0.13 = 0.52 us);
RT_HW_Base.spiEndTransaction(id.bus);								//--Окончание транзакции;
csHIGH(id);															//--cs=HIGH;
//-------------------------------------------------------------------------------------------------
RT_HW_Base.spiClearBusy(id.bus);					id.step=60;}	//--Освобождение шины и переход на продолжение;
//-------------------------------------------------------------------------------------------------
//				3.060.Задержка	id.timeChannel			
//-------------------------------------------------------------------------------------------------
if(id.step==60){id.checkSTEP.pointTime=100; id.checkSTEP.sizeDelay=id.timeChannel; 	id.step=251; return;}//--Переход на продолжение после задержки (us);
//-------------------------------------------------------------------------------------------------
//				3.100.Обработка полученных данных и успешное завершение			
//-------------------------------------------------------------------------------------------------
if(id.step==100){	
id.vADCraw=((int32_t)id.arr[2] << 16) + ((int32_t)id.arr[1] << 8) + ((int32_t)id.arr[0]);
id.vADCint=id.vADCraw;
if(id.vADCint & 0x00800000){id.vADCint|=0xff000000;}
//--------------------------------------------------------------------------------------------------
id.vADCfloat=(float)id.vADCint;
id.vADCvolt= (id.vADCfloat / 0x7FFFFF) * id.vFactorFV;
			//-------------------------------------------------------------------------------------------------
id.action=0; id.fresh=1;       						id.step=0;};
//-------------------------------------------------------------------------------------------------
}	//====END readChannel()


//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//							7.Проверка DRDY
//       (по прерыванию, через чтения пина, через чтение чтение регистра STATUS)
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
void getDRDY(RT_HW_ADS1256_DEV &id, uint32_t vDelay=0){
//-------------------------------------------------------------------------------------------------
if(id.drdy==250){if(RT_HW_Base.checkDelayMS(id.checkDRDY)) {return;} id.drdy=id.checkDRDY.pointTime;}	//--Задержка в ms;
if(id.drdy==251){if(RT_HW_Base.checkDelayUS(id.checkDRDY)) {return;} id.drdy=id.checkDRDY.pointTime;}	//--Задержка в us;
//-------------------------------------------------------------------------------------------------
//				7.000.Настройка функции
//-------------------------------------------------------------------------------------------------
if(id.drdy==0)  {
id.busyDRDY=1;  id.cntDelayDRDY=0; id.cntRptDRDY=0; id.cntErrRptDRDY=0; //--Сброс и установка параметров;
id.timeBeginDRDY=RT_HW_MICROS; 											//--Фиксаций времени отсчета;
id.actDRDY=1; id.errDRDY=0;								 id.drdy=10;} 	//--Настройка параметров функции и переход на продолжение;
//-------------------------------------------------------------------------------------------------
//				7.010.Проверка через прерывания от пина;
//-------------------------------------------------------------------------------------------------
if(id.drdy==10) {id.drdy=20;}
//-------------------------------------------------------------------------------------------------
//				7.020.Проверка через чтение пина
//-------------------------------------------------------------------------------------------------
if(id.drdy==20) {
if(id.permitPinDRDY){if(!digitalRead(id.pinDRDY)){id.busyDRDY=0;}} 		//--Еcли разрешено, чтение пина;
if(!id.busyDRDY)   										{id.drdy=200;}	//--Переход на завершение, если устройство свободно;   
else													{id.drdy=30;}}	//--Переход на продолжение;							
//-------------------------------------------------------------------------------------------------
//				7.030.Проверка тайм-аута ожидания (3сек) [Защита от зависания]
//-------------------------------------------------------------------------------------------------
if(id.drdy==30) {
id.timeEndDRDY=RT_HW_MICROS; 
if(RT_HW_Base.getPastTime(id.timeBeginDRDY,id.timeEndDRDY)>=RT_HW_ADS1256_DRDY_TIMEOUT_US){id.codeErr=80; id.drdy=210;}	//--Переход на завершение  по тайм-ауту;
else												   {id.drdy=40; }} 	//--Переход на продолжение;
//-------------------------------------------------------------------------------------------------
//				7.040.Чтение STATUS: 	0x01 0x00 ->~0x32				[time~100 us] 	[Идентификации устройства]
//-------------------------------------------------------------------------------------------------
if(id.drdy==40) {
if(id.blockSpiDRDY)									   {id.drdy=10;	return;}//--Возврат при блокировки проверки DRDY через SPI;
id.timeEndDRDY=RT_HW_MICROS; 
if(RT_HW_Base.getPastTime(id.timeBeginDRDY,id.timeEndDRDY)>=(200*(id.cntDelayDRDY))){id.cntDelayDRDY++;	id.drdy=50;}
else													{id.drdy=10;}}
//-------------------------------------------------------------------------------------------------
//				7.050.Чтение STATUS: 00x01,0x00 (для идентификация устройства)[t~0 us] 
//-------------------------------------------------------------------------------------------------
if(id.drdy==50) {
if(!readReg(id,RT_HW_ADS1256_REG_STATUS))	{			id.drdy=10;	return;}//--При ожидании от SPI, возврат на начало; 												
if((id.vReg8>>4)!=id.vID)	                {			id.drdy=10; return;}//--При неверном ID,     возврат на начало;         
//-------------------------------------------------------------------------------------------------
id.vSTATUS=id.vReg8;														//--Сохранение STATUS;
if(!(id.vSTATUS & 0x01)){id.busyDRDY=0;}									//--Получение busyDRDY (=!STSTUS.DRDY);
if(++id.cntDelayDRDY>5){id.cntDelayDRDY=100;}								//--Увеличение счетчика повторов;																		
if(++id.cntRptDRDY>5)				 {id.codeErr=81; 	id.drdy=210;return;}//--Переход на завершение по ошибке не возможности считывания;
if(id.busyDRDY)										   {id.drdy=10; return;}//--При STATUS.DRDY=1   возврат на начало;    
else												   {id.drdy=200;       }//--Переход на успешный выход;
}  
//-------------------------------------------------------------------------------------------------
//				7.200.Успешное завершение 
//-------------------------------------------------------------------------------------------------
if(id.drdy==200){id.actDRDY=0; 							id.drdy=0; 	return;} 	
//-------------------------------------------------------------------------------------------------
//				7.210.Завершение по ошибке 
//-------------------------------------------------------------------------------------------------
if(id.drdy==210){id.errDRDY=1;  						id.drdy=0; 	return;} 		
};	//====END checkDRDY();
//=================================================================================================
};											//--END Class RT_HW_ADS1256;
extern RT_HW_ADS1256 	RT_HW_ads1256; 		//--Создание объекта RT_HW_ADS1256;
#endif
//=================================================================================================
